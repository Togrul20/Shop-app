{"version":3,"sources":["src/components/redux/reducers/shoppinglistsSlice.js","src/components/browser-storage.js","src/components/redux/store.js","src/components/Header.js","src/components/ShopList.js","src/components/redux/actions/AddShoppingListForm.js","src/components/ShopApp.js","App.js"],"names":["shoppinglistsSlice","createSlice","name","initialState","reducers","addShoppingList","state","action","list","id","Math","floor","random","title","payload","quantity","price","completed","push","actions","serializedState","JSON","stringify","localStorage","setItem","e","store","configureStore","reducer","shoppinglists","preloadedState","getItem","parse","loadState","styles","StyleSheet","create","container","display","justifyContent","alignItems","flexDirection","headerText","fontSize","color","fontWeight","marginTop","Header","View","style","Text","Ionicons","marginLeft","itemsStyle","ShopList","useSelector","console","log","SafeAreaView","flex","paddingTop","backgroundColor","DataTable","height","Title","numeric","map","todo","index","Row","Cell","toFixed","listsContainer","listInput","lineHeight","marginBottom","paddingLeft","width","border","listInputLabel","fontStyle","addBtn","borderRadius","maxWidth","addBtnText","textAlign","padding","AddShoppingListForm","useState","text","setText","itemQuantity","setItemQuantity","itemPrice","setItemPrice","dispatch","useDispatch","submitHandler","preventDefault","onSubmit","TextInput","placeholder","onChangeText","value","textContentType","TouchableOpacity","onPress","ShoppApp","subscribe","saveState","getState","App"],"mappings":"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","file":"static/js/app.e8ff9485.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const shoppinglistsSlice = createSlice({\r\n  name: \"shoppinglists\",\r\n  initialState: [],\r\n  reducers: {\r\n    addShoppingList: (state, action) => {\r\n      const list = {\r\n        id: Math.floor(Math.random() * 1000),\r\n        title: action.payload.title,\r\n        quantity: +action.payload.quantity,\r\n        price: +action.payload.price,\r\n        completed: false,\r\n      };\r\n      state.push(list);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addShoppingList } = shoppinglistsSlice.actions;\r\nexport default shoppinglistsSlice.reducer;\r\n","const KEY = \"redux\";\r\n\r\nexport function loadState() {\r\n  try {\r\n    const serializedState = localStorage.getItem(KEY);\r\n    if (!serializedState) return undefined;\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport async function saveState(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(KEY, serializedState);\r\n  } catch (e) {\r\n    // Ignore\r\n  }\r\n}\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport shoppinglistsSlice from \"./reducers/shoppinglistsSlice\";\r\nimport { loadState } from \"../browser-storage\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    shoppinglists: shoppinglistsSlice,\r\n  },\r\n  preloadedState: loadState(),\r\n});\r\n","import React from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.headerText}>Shopping List</Text>\r\n      <Ionicons\r\n        name=\"basket\"\r\n        style={{\r\n          fontSize: 40,\r\n          color: \"black\",\r\n          marginTop: 5,\r\n          marginLeft: 5,\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n  headerText: {\r\n    fontSize: 30,\r\n    color: \"#0A004D\",\r\n    fontWeight: \"bold\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  ScrollView,\r\n  CheckBox,\r\n  SafeAreaView,\r\n  Linking,\r\n} from \"react-native\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Table, Row, Rows } from \"react-native-table-component\";\r\nimport { DataTable } from \"react-native-paper\";\r\n\r\nconst ShopList = () => {\r\n  const shoppinglists = useSelector((state) => state.shoppinglists);\r\n  console.log(shoppinglists);\r\n\r\n  return (\r\n    <SafeAreaView\r\n      style={{\r\n        flex: 1,\r\n        paddingTop: 24,\r\n        backgroundColor: \"#fff\",\r\n      }}\r\n    >\r\n      <DataTable>\r\n        <DataTable.Header\r\n          style={{ height: 44, backgroundColor: \"black\", height: 50 }}\r\n        >\r\n          <DataTable.Title>\r\n            <Text style={{ color: \"white\", fontSize: 18 }}>Name</Text>\r\n          </DataTable.Title>\r\n          <DataTable.Title numeric>\r\n            <Text style={{ color: \"white\", fontSize: 18 }}>Quantity</Text>\r\n          </DataTable.Title>\r\n          <DataTable.Title numeric>\r\n            <Text style={{ color: \"white\", fontSize: 18 }}>Price</Text>\r\n          </DataTable.Title>\r\n          <DataTable.Title numeric>\r\n            <Text style={{ color: \"white\", fontSize: 18 }}>Summary</Text>\r\n          </DataTable.Title>\r\n        </DataTable.Header>\r\n        {shoppinglists.map((todo, index) => (\r\n          <DataTable.Row>\r\n            {/* <CheckBox /> */}\r\n            <DataTable.Cell>\r\n              <Text style={styles.itemsStyle}>{todo.title}</Text>\r\n            </DataTable.Cell>\r\n            <DataTable.Cell numeric>\r\n              <Text style={styles.itemsStyle}>{todo.quantity}kg</Text>\r\n            </DataTable.Cell>\r\n            <DataTable.Cell numeric>\r\n              <Text style={styles.itemsStyle}>{todo.price}$</Text>\r\n            </DataTable.Cell>\r\n            <DataTable.Cell numeric>\r\n              <Text style={styles.itemsStyle}>\r\n                {(todo.quantity * todo.price).toFixed(2)}$\r\n              </Text>\r\n            </DataTable.Cell>\r\n          </DataTable.Row>\r\n        ))}\r\n      </DataTable>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  itemsStyle: {\r\n    fontSize: 20,\r\n  },\r\n});\r\n\r\nexport default ShopList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  Button,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\n// import { useForm, Controller } from \"react-hook-form\";\r\nimport { Formik } from \"formik\";\r\nimport { addShoppingList } from \"../reducers/shoppinglistsSlice\";\r\nimport { TouchableOpacity } from \"react-native-web\";\r\n\r\nconst AddShoppingListForm = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [itemQuantity, setItemQuantity] = useState(\"\");\r\n  const [itemPrice, setItemPrice] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  // useEffect(() => {\r\n  //   // storing input name\r\n  //   localStorage.setItem(\r\n  //     \"name\",\r\n  //     JSON.stringify({ title: text, quantity: itemQuantity, price: itemPrice })\r\n  //   );\r\n  // }, [{ title: text, quantity: itemQuantity, price: itemPrice }]);\r\n\r\n  // useEffect(() => {\r\n  //   const items = JSON.parse(localStorage.getItem(\"name\"));\r\n  //   if (items) {\r\n  //     setText(text);\r\n  //     setItemQuantity(itemQuantity);\r\n  //     setItemPrice(itemPrice);\r\n  //   }\r\n  // }, []);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      addShoppingList({ title: text, quantity: itemQuantity, price: itemPrice })\r\n    );\r\n    setText(\"\");\r\n    setItemQuantity(\"\");\r\n    setItemPrice(\"\");\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <Formik onSubmit={submitHandler}>\r\n        <View>\r\n          <View style={styles.listsContainer}>\r\n            <Text style={styles.listInputLabel}>Insert item</Text>\r\n            <TextInput\r\n              placeholder=\"Add item\"\r\n              onChangeText={setText}\r\n              value={text}\r\n              style={styles.listInput}\r\n            />\r\n            <Text style={styles.listInputLabel}>Insert quantity of item</Text>\r\n            <TextInput\r\n              placeholder=\"Add quantity by number\"\r\n              onChangeText={setItemQuantity}\r\n              value={itemQuantity}\r\n              style={styles.listInput}\r\n              textContentType=\"number\"\r\n            />\r\n            <Text style={styles.listInputLabel}>Insert price of item</Text>\r\n            <TextInput\r\n              placeholder=\"Add price by number\"\r\n              onChangeText={setItemPrice}\r\n              value={itemPrice}\r\n              style={styles.listInput}\r\n              textContentType=\"number\"\r\n            />\r\n          </View>\r\n          <TouchableOpacity onPress={submitHandler}>\r\n            <View style={styles.addBtn}>\r\n              <Text style={styles.addBtnText}>Add</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Formik>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  listsContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"flex-start\",\r\n    flex: 1,\r\n  },\r\n\r\n  listInput: {\r\n    fontSize: 22,\r\n    lineHeight: 1.5,\r\n    marginBottom: 20,\r\n    paddingLeft: 5,\r\n    color: \"black\",\r\n    width: \"100%\",\r\n    border: \"3px solid black\",\r\n  },\r\n\r\n  listInputLabel: {\r\n    marginLeft: 5,\r\n    fontStyle: \"italic\",\r\n    fontSize: 25,\r\n    fontWeight: \"bold\",\r\n    color: \"#E00000\",\r\n  },\r\n\r\n  addBtn: {\r\n    backgroundColor: \"#0A004D\",\r\n    borderRadius: 10,\r\n    maxWidth: \"100%\",\r\n  },\r\n\r\n  addBtnText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default AddShoppingListForm;\r\n","import React, { useState } from \"react\";\r\nimport { View, StyleSheet, Text } from \"react-native\";\r\nimport ShopList from \"./ShopList\";\r\nimport AddShoppingListForm from \"./redux/actions/AddShoppingListForm\";\r\n\r\nconst ShoppApp = () => {\r\n  return (\r\n    <View>\r\n      <AddShoppingListForm />\r\n      <ShopList />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ShoppApp;\r\n","import React, { useState } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./src/components/redux/store\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport Header from \"./src/components/Header\";\nimport ShoppApp from \"./src/components/ShopApp\";\nimport { saveState } from \"./src/components/browser-storage\";\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\nfunction App() {\n  return (\n    <View>\n      <Provider store={store}>\n        <Header />\n        <ShoppApp />\n      </Provider>\n    </View>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}